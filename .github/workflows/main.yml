name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name}} -${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
concurrency:
 group: ${{ github.workflow }}-${{ github.ref }}
 cancel-in-progress: true
env:
  PythonVersion: 3.8
  DockerImageNameBackend: vinoselecto-backend
  DockerImageNameFrontend: vinoselecto-Frontend

jobs: 
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}


      - name: Test back
        run: |
         npm run start

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install coverage flake8
  #         pip install -r requirements.txt

  #     - name: Run tests
  #       run: |
  #         python manage.py test

  #     - name: Generate Report
  #       run: |
  #         coverage run --source='.' manage.py test
  #         coverage report

  #     - name: Linting
  #       run: |
  #         flake8 . --show-source --statistics --exit-zero

  #     - name: Check Complexity
  #       run: |
  #         flake8 . --exit-zero --max-complexity=6

  #     - name: Upload python artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: python-artifacts
  #         path: .

  #     - name: Upload helm artifacts
  #       if: github.ref_name == 'main'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: helm-artifacts
  #         path: ${{ github.workspace }}/helm-charts

  #     - name: Upload kind cluster artifact
  #       if: github.ref_name == 'main'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: kind-cluster
  #         path: ${{ github.workspace }}/cluster.yml

  # backend-docker-ci:
  #   name: Build and Push Image
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref_name == 'main' }}
  #   needs: backend-ci
  #   steps:

  #   - uses: actions/download-artifact@v4
  #     name: Download python artifacts
  #     with:
  #       name: python-artifacts
  #       path: .

  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Build and push
  #     uses: docker/build-push-action@v5
  #     with:
  #       push: true
  #       context: ./src/backend
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageNameBackend }}:${{ github.sha }}

  # backend-helm-ci:
  #   runs-on: ubuntu-latest
  #   needs: backend-ci
  #   if: github.ref_name == 'main'
  #   name: Helm CI
  #   steps:

  #   - uses: actions/download-artifact@v4
  #     with:
  #       name: helm-artifacts
  #       path: .

  #   - name: Set Up Helm
  #     uses: azure/setup-helm@v4.2.0

  #   - name: Lint helm
  #     run: helm lint ./vsfront/

  #   - name: Template Helm
  #     run: helm template vsfront ./vsfront/ -f ./vsfront/values.yaml

  #   - name: Package Helm
  #     run: helm package ./vsfront

  #   - name: Upload Helm Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: helm-package
  #       path: ./*.tgz

  # deploy-helm-dev:
  #   name: Deploy helm
  #   uses: ./.github/workflows/reusable-deployment.yml
  #   needs: [backend-helm-ci, backend-docker-ci]
  #   secrets: inherit
  #   with:
  #     environment: development
  #     version: ${{ github.sha }}